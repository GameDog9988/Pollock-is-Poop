import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import dynamic from "next/dynamic";

// Will only import `react-p5` on client-side
const Sketch = dynamic(() => import("react-p5").then((mod) => mod.default), {
  ssr: false,
});

export default function Home() {
  let img;

  const preload = (p5) => {
    img = p5.loadImage("images/michele.jpg");
  };

  const setup = (p5, canvasParentRef) => {
    // p5.createCanvas(500, 400).parent(canvasParentRef);
    let cnv = p5.createCanvas(img.width, img.height).parent(canvasParentRef);
    // print(img.width, img.height);
    let newCanvasX = (window.innerWidth - img.width) / 2;
    let newCanvasY = (window.innerHeight - img.height) / 2;

    cnv.position(newCanvasX, newCanvasY);
    cnv.background("#fff");

    for (let col = 0; col < img.width; col += 5) {
      for (let row = 0; row < img.height; row += 5) {
        let xPos = col;
        let yPos = row;

        let c = img.get(col, row);
        p5.push();
        p5.translate(xPos, yPos);
        p5.rotate(p5.radians(p5.random(360)));
        p5.noFill();
        p5.stroke(p5.color(c));
        p5.strokeWeight(p5.random(5));
        // fill(color(c));
        p5.point(xPos, yPos);
        p5.strokeWeight(p5.random(3));
        // rect(col, row, 10, 5);
        p5.curve(
          xPos,
          yPos,
          p5.sin(xPos) * p5.random(60),
          p5.cos(yPos) * p5.sin(xPos) * p5.random(90),
          p5.random(10),
          p5.random(80),
          p5.cos(yPos) * p5.sin(xPos) * p5.random(100),
          p5.cos(yPos) * p5.sin(xPos) * p5.random(50)
        );
        p5.pop();
      }
    }
  };

  const draw = (p5) => {
    // p5.background(255, 130, 20);
    // p5.ellipse(100, 100, 100);
    // p5.ellipse(300, 100, 100);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="grid place-items-center h-screen">
        <Sketch preload={preload} setup={setup} />
      </main>
    </div>
  );
}
